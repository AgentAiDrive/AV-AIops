import express from 'express';import cors from 'cors';import morgan from 'morgan';import rateLimit from 'express-rate-limit';import dotenv from 'dotenv';dotenv.config();const app=express();app.use(cors());app.use(express.json({limit:'1mb'}));app.use(morgan('dev'));app.use(rateLimit({windowMs:60000,max:120}));const PORT=process.env.PORT_SNOW||0;app.get('/healthz',(req,res)=>res.json({ok:true}));app.get('/readyz',(req,res)=>res.json({ok:true}));app.get('/api/test',(req,res)=>res.json({ok:true,service:'mcp-servicenow'}));let KB=[];app.post('/api/kb/create',(req,res)=>{const {title='KB',html='<p>Mock</p>'}=req.body||{};const sys_id=Math.random().toString(36).slice(2);KB.push({sys_id,title,html});return res.json({ok:true,sys_id,link:`https://mock.snow.local/kb/${sys_id}`});});app.post('/api/story/create',(req,res)=>{const {short_description='Story',details={}}=req.body||{};const sys_id=Math.random().toString(36).slice(2);return res.json({ok:true,sys_id,short_description});});app.listen(PORT,()=>console.log('mcp-servicenow listening',PORT));