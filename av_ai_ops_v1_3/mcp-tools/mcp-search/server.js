import express from 'express';import cors from 'cors';import morgan from 'morgan';import rateLimit from 'express-rate-limit';import dotenv from 'dotenv';dotenv.config();const app=express();app.use(cors());app.use(express.json({limit:'1mb'}));app.use(morgan('dev'));app.use(rateLimit({windowMs:60000,max:120}));const PORT=process.env.PORT_SEARCH||0;app.get('/healthz',(req,res)=>res.json({ok:true}));app.get('/readyz',(req,res)=>res.json({ok:true}));app.get('/api/test',(req,res)=>res.json({ok:true,service:'mcp-search'}));app.get('/api/search',(req,res)=>{const q=req.query.q||'av ops';const domains=(req.query.domains||'').split(',').filter(Boolean);const results=Array.from({length:10}).map((_,i)=>({title:`Result ${i+1} for ${q}`,url:`https://docs.mock/${encodeURIComponent(q)}/${i+1}`,source:domains[0]||'mock.docs'}));return res.json({ok:true,q,results});});app.listen(PORT,()=>console.log('mcp-search listening',PORT));